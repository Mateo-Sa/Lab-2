Вопрос 2. Паттерн Adapter. Ответьте на вопрос: на сколько адекватно данная задача притянута к задаче реализации паттерна Adapter и почему?

Ответ: данная задача неадекватно притянута к реализации паттерна Adapter, так как для Adapter необходимо явно показать несовместимость 
интерфейсов и объект-прослойку, преобразующий один интерфейс в другой. Здесь же логика преобразования отсутствует.

Вопрос 6. Паттерн Cache (Flyweight).  Опишите любую удачную для примера систему объектов.

Ответ: в качестве примера для паттерна Flyweight можно рассмотреть систему отрисовки текста в графическом редакторе. 
В каждом символе текста есть атрибуты: шрифт, размер, цвет. Вместо создания отдельного объекта для каждого символа с его атрибутами,
можно использовать этот паттерн, где общие атрибуты (шрифт, размер, цвет) хранятся в разделяемом объекте,
 а для каждого символа создается только объект, хранящий его уникальное значение (код символа, позицию на экране). 
Flyweight необходимо использовать, когда множество объектов имеют одинаковое состояние.

Вопрос 7. Паттерн Proxy.  Приведите пример использованных вами Proxy библиотек на dotNET в рамках курсов, изучаемых в университете.
Ответ: Castle DynamicProxy.  Он позволяет перехватывать вызовы методов и изменять поведение объектов во время выполнения. 
